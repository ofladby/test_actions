name: Backend build lambdas DEV

env:
    BRANCH: dev
    DEV_PROFILE: Brain-DEV
    AWS_REGION : "eu-west-2"
    AWS_ROLE_TO_ASSUME: arn:aws:iam::891377009928:role/GitHub_ofladby

# Permission can be added at job level or workflow level    
permissions:
    id-token: write   # This is required for requesting the JWT
    contents: read    # This is required for actions/checkout

on:
  push:
    branches:
      - dev     
    paths-ignore:
      - .VERSION

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}          

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ env.DEV_PROFILE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Profile
        shell: bash
        run: |
          aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.DEV_PROFILE }}
          aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile ${{ env.DEV_PROFILE }}
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile ${{ env.DEV_PROFILE }}
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile ${{ env.DEV_PROFILE }}
      
      - name: Reset AWS Environment Variables
        shell: bash
        run: |
          echo "AWS_ACCESS_KEY_ID=" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=" >> $GITHUB_ENV

      - name: Make lambdas
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          AWS_PROFILE_BRAIN_DEV=${{ env.DEV_PROFILE }} make all

      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity --profile ${{ env.DEV_PROFILE }}